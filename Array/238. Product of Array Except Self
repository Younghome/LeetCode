Given an array nums of n integers where n > 1,  return an array output such that output[i] is equal to the product of all the elements of 
nums except nums[i].

Example:

Input:  [1,2,3,4]
Output: [24,12,8,6]
Note: Please solve it without division and in O(n).
//2ms,39.26%
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int[] res = new int[nums.length];
        res[0] = 1;
        for (int i = 1; i < nums.length; i++){
            res[i] = res[i-1]*nums[i-1];
        }
        int right = 1;
        for (int i = nums.length - 1; i >= 0; i--){
            res[i] *= right;
            right *= nums[i];
        }
        return res;
    }
}
//1ms,100%
class Solution {
    public int[] productExceptSelf(int[] nums) {
        int val = 1;
        int len = nums.length;
        int[] res = new int[len];
        for (int i = 0; i < len; i++){
            res[i] = val;
            val *= nums[i];
        }
        val = 1;
        for (int i = len - 1; i >= 0; i--){
            res[i] *= val;
            val *= nums[i];
        }
        return res;
    }
}
