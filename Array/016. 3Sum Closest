Given an array nums of n integers and an integer target, find three integers in nums such that the sum is closest to target. Return the 
sum of the three integers. You may assume that each input would have exactly one solution.

Example:

Given array nums = [-1, 2, 1, -4], and target = 1.

The sum that is closest to the target is 2. (-1 + 2 + 1 = 2).
//123ms,4.51%
class Solution {
    public int threeSumClosest(int[] nums, int target) {
        if (nums == null || nums.length < 3)
            return Integer.MAX_VALUE;
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for (int i = 0; i < nums.length-2; i++){
            for (int j = i+1; j < nums.length-1; j++){
                for (int k = j+1; k < nums.length; k++){
                    int value = nums[i] + nums[j] +nums[k] - target;
                    if (value >= 0){
                        min = Math.min(min,value);
                    }
                    else{
                        max = Math.max(max,value);
                    }
                }
            }
        }
        if (min == Integer.MAX_VALUE)
            return max+target;
        else if (max == Integer.MIN_VALUE)
            return min+target;
        else if (min >= -max)
            return max+target;
        else
            return min+target;
    }
}
//8ms,99.58%
class Solution {
    
    public int threeSumClosest(int[] nums, int target) {
        
        int ret = Integer.MAX_VALUE;
        Arrays.sort(nums);
        for(int i = nums.length - 1; i >= 2; i--) {
            int item =  twoSumClosest(nums, target - nums[i], i - 1);
            if(item == 0) {
                return target;
            }
            if(Math.abs(item) < Math.abs(ret)) {
                ret = item;
            }
        }
        return target + ret;
    }
    
    private int twoSumClosest(int[] nums, int target, int end) {
        
        int l = 0, r = end, ret = Integer.MAX_VALUE;
        while(l < r) {
            int item = nums[l] + nums[r] - target;
            if(item == 0) {
                return 0;
            }
            if(Math.abs(item) < Math.abs(ret)) {
                ret = item;
            }
            if(item < 0) {
                l++;
            } else {
                r--;
            }
        }
        return ret;
    }
}
