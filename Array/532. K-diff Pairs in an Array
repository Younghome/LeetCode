Given an array of integers and an integer k, you need to find the number of unique k-diff pairs in the array. Here a k-diff 
pair is defined as an integer pair (i, j), where i and j are both numbers in the array and their absolute difference is k.
//14ms,88.61%
class Solution {
    public int findPairs(int[] nums, int k) {
        if (nums == null || nums.length == 0 || nums.length == 1 || k < 0)
            return 0;
        Map<Integer,Integer> map = new HashMap<>();
        for (int num:nums)
            map.put(num,map.getOrDefault(num,0)+1);
        int res = 0;
        for (int i : map.keySet()){
            if (k == 0){
                if (map.get(i) > 1)
                res++;
            }
            else{
                if (map.containsKey(i-k))
                    res++;
            }
        }
        return res;
    }
}
//
class Solution {
    public int findPairs(int[] nums, int k) {
        if (nums == null || nums.length == 0 || nums.length == 1)
            return 0;
        Arrays.sort(nums);
        int left = 0;
        int right = 1;
        int count = 0;
        while (right < nums.length){
            int first = nums[left];
            int second = nums[right];
            if (second - first < k)
                right++;
            else if (second - first > k)
                left++;
            else{
                count++;
                while(left<nums.length && nums[left]==first)
                    left++;
                while(right<nums.length && nums[right]==second)
                    right++;
            }
            if (left == right)
                right++;
        }
        return count;
    }
}
