//25ms
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap<Integer,Integer> map = new HashMap<>();
        for (int i = 0; i < nums.length; i ++){
            if (map.containsKey(nums[i])){
                int cur = map.get(nums[i]);
                if (i-cur <= k)
                    return true;
                else{
                    map.remove(nums[i]);
                    map.put(nums[i],i);
                }
            }
            else
                map.put(nums[i],i);
        }
        return false;
    }
}
//14ms
class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        Set<Integer> set = new HashSet<>();
        for (int i = 0; i < nums.length; i ++){
            if (i>k) set.remove(nums[i-k-1]);
            if (!set.add(nums[i])) return true;
        }
        return false;
    }
}
